/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 67.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 2.0], [39.8, 2.0], [39.9, 2.0], [40.0, 2.0], [40.1, 2.0], [40.2, 2.0], [40.3, 2.0], [40.4, 2.0], [40.5, 2.0], [40.6, 2.0], [40.7, 2.0], [40.8, 2.0], [40.9, 2.0], [41.0, 2.0], [41.1, 2.0], [41.2, 2.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 2.0], [42.2, 2.0], [42.3, 2.0], [42.4, 2.0], [42.5, 2.0], [42.6, 2.0], [42.7, 2.0], [42.8, 2.0], [42.9, 2.0], [43.0, 2.0], [43.1, 2.0], [43.2, 2.0], [43.3, 2.0], [43.4, 2.0], [43.5, 2.0], [43.6, 2.0], [43.7, 2.0], [43.8, 2.0], [43.9, 2.0], [44.0, 2.0], [44.1, 2.0], [44.2, 2.0], [44.3, 2.0], [44.4, 2.0], [44.5, 2.0], [44.6, 2.0], [44.7, 2.0], [44.8, 2.0], [44.9, 2.0], [45.0, 2.0], [45.1, 2.0], [45.2, 2.0], [45.3, 2.0], [45.4, 2.0], [45.5, 2.0], [45.6, 2.0], [45.7, 2.0], [45.8, 2.0], [45.9, 2.0], [46.0, 2.0], [46.1, 2.0], [46.2, 2.0], [46.3, 2.0], [46.4, 2.0], [46.5, 2.0], [46.6, 2.0], [46.7, 2.0], [46.8, 2.0], [46.9, 2.0], [47.0, 2.0], [47.1, 2.0], [47.2, 2.0], [47.3, 2.0], [47.4, 2.0], [47.5, 2.0], [47.6, 2.0], [47.7, 2.0], [47.8, 2.0], [47.9, 2.0], [48.0, 2.0], [48.1, 2.0], [48.2, 2.0], [48.3, 2.0], [48.4, 2.0], [48.5, 2.0], [48.6, 2.0], [48.7, 2.0], [48.8, 2.0], [48.9, 2.0], [49.0, 2.0], [49.1, 2.0], [49.2, 2.0], [49.3, 2.0], [49.4, 2.0], [49.5, 2.0], [49.6, 2.0], [49.7, 2.0], [49.8, 2.0], [49.9, 2.0], [50.0, 2.0], [50.1, 2.0], [50.2, 2.0], [50.3, 2.0], [50.4, 2.0], [50.5, 2.0], [50.6, 2.0], [50.7, 2.0], [50.8, 2.0], [50.9, 2.0], [51.0, 2.0], [51.1, 2.0], [51.2, 2.0], [51.3, 2.0], [51.4, 2.0], [51.5, 2.0], [51.6, 2.0], [51.7, 2.0], [51.8, 2.0], [51.9, 2.0], [52.0, 2.0], [52.1, 2.0], [52.2, 2.0], [52.3, 2.0], [52.4, 2.0], [52.5, 2.0], [52.6, 2.0], [52.7, 2.0], [52.8, 2.0], [52.9, 2.0], [53.0, 2.0], [53.1, 2.0], [53.2, 2.0], [53.3, 2.0], [53.4, 2.0], [53.5, 2.0], [53.6, 2.0], [53.7, 2.0], [53.8, 2.0], [53.9, 2.0], [54.0, 2.0], [54.1, 2.0], [54.2, 2.0], [54.3, 2.0], [54.4, 2.0], [54.5, 2.0], [54.6, 2.0], [54.7, 2.0], [54.8, 2.0], [54.9, 2.0], [55.0, 2.0], [55.1, 2.0], [55.2, 2.0], [55.3, 2.0], [55.4, 2.0], [55.5, 2.0], [55.6, 2.0], [55.7, 2.0], [55.8, 2.0], [55.9, 2.0], [56.0, 2.0], [56.1, 2.0], [56.2, 2.0], [56.3, 2.0], [56.4, 2.0], [56.5, 2.0], [56.6, 2.0], [56.7, 2.0], [56.8, 2.0], [56.9, 2.0], [57.0, 2.0], [57.1, 2.0], [57.2, 2.0], [57.3, 2.0], [57.4, 2.0], [57.5, 2.0], [57.6, 2.0], [57.7, 2.0], [57.8, 2.0], [57.9, 2.0], [58.0, 2.0], [58.1, 2.0], [58.2, 2.0], [58.3, 2.0], [58.4, 2.0], [58.5, 2.0], [58.6, 2.0], [58.7, 2.0], [58.8, 2.0], [58.9, 2.0], [59.0, 2.0], [59.1, 2.0], [59.2, 2.0], [59.3, 2.0], [59.4, 2.0], [59.5, 2.0], [59.6, 2.0], [59.7, 2.0], [59.8, 2.0], [59.9, 2.0], [60.0, 2.0], [60.1, 2.0], [60.2, 2.0], [60.3, 2.0], [60.4, 2.0], [60.5, 2.0], [60.6, 2.0], [60.7, 2.0], [60.8, 2.0], [60.9, 2.0], [61.0, 2.0], [61.1, 2.0], [61.2, 2.0], [61.3, 2.0], [61.4, 2.0], [61.5, 2.0], [61.6, 2.0], [61.7, 2.0], [61.8, 2.0], [61.9, 2.0], [62.0, 2.0], [62.1, 2.0], [62.2, 2.0], [62.3, 2.0], [62.4, 2.0], [62.5, 2.0], [62.6, 2.0], [62.7, 2.0], [62.8, 2.0], [62.9, 2.0], [63.0, 2.0], [63.1, 2.0], [63.2, 2.0], [63.3, 2.0], [63.4, 2.0], [63.5, 2.0], [63.6, 2.0], [63.7, 2.0], [63.8, 2.0], [63.9, 2.0], [64.0, 2.0], [64.1, 2.0], [64.2, 2.0], [64.3, 2.0], [64.4, 2.0], [64.5, 2.0], [64.6, 2.0], [64.7, 2.0], [64.8, 2.0], [64.9, 2.0], [65.0, 2.0], [65.1, 2.0], [65.2, 2.0], [65.3, 2.0], [65.4, 2.0], [65.5, 2.0], [65.6, 2.0], [65.7, 2.0], [65.8, 2.0], [65.9, 2.0], [66.0, 2.0], [66.1, 2.0], [66.2, 2.0], [66.3, 2.0], [66.4, 2.0], [66.5, 2.0], [66.6, 2.0], [66.7, 2.0], [66.8, 2.0], [66.9, 2.0], [67.0, 2.0], [67.1, 2.0], [67.2, 2.0], [67.3, 2.0], [67.4, 2.0], [67.5, 2.0], [67.6, 2.0], [67.7, 2.0], [67.8, 2.0], [67.9, 2.0], [68.0, 2.0], [68.1, 2.0], [68.2, 2.0], [68.3, 2.0], [68.4, 2.0], [68.5, 2.0], [68.6, 2.0], [68.7, 2.0], [68.8, 2.0], [68.9, 2.0], [69.0, 2.0], [69.1, 2.0], [69.2, 2.0], [69.3, 2.0], [69.4, 2.0], [69.5, 2.0], [69.6, 2.0], [69.7, 2.0], [69.8, 2.0], [69.9, 2.0], [70.0, 2.0], [70.1, 2.0], [70.2, 2.0], [70.3, 2.0], [70.4, 2.0], [70.5, 2.0], [70.6, 2.0], [70.7, 2.0], [70.8, 2.0], [70.9, 2.0], [71.0, 2.0], [71.1, 2.0], [71.2, 3.0], [71.3, 3.0], [71.4, 3.0], [71.5, 3.0], [71.6, 3.0], [71.7, 3.0], [71.8, 3.0], [71.9, 3.0], [72.0, 3.0], [72.1, 3.0], [72.2, 3.0], [72.3, 3.0], [72.4, 3.0], [72.5, 3.0], [72.6, 3.0], [72.7, 3.0], [72.8, 3.0], [72.9, 3.0], [73.0, 3.0], [73.1, 3.0], [73.2, 3.0], [73.3, 3.0], [73.4, 3.0], [73.5, 3.0], [73.6, 3.0], [73.7, 3.0], [73.8, 3.0], [73.9, 3.0], [74.0, 3.0], [74.1, 3.0], [74.2, 3.0], [74.3, 3.0], [74.4, 3.0], [74.5, 3.0], [74.6, 3.0], [74.7, 3.0], [74.8, 3.0], [74.9, 3.0], [75.0, 3.0], [75.1, 3.0], [75.2, 3.0], [75.3, 3.0], [75.4, 3.0], [75.5, 3.0], [75.6, 3.0], [75.7, 3.0], [75.8, 3.0], [75.9, 3.0], [76.0, 3.0], [76.1, 3.0], [76.2, 3.0], [76.3, 3.0], [76.4, 3.0], [76.5, 3.0], [76.6, 3.0], [76.7, 3.0], [76.8, 3.0], [76.9, 3.0], [77.0, 3.0], [77.1, 3.0], [77.2, 3.0], [77.3, 3.0], [77.4, 3.0], [77.5, 3.0], [77.6, 3.0], [77.7, 3.0], [77.8, 3.0], [77.9, 3.0], [78.0, 3.0], [78.1, 3.0], [78.2, 3.0], [78.3, 3.0], [78.4, 3.0], [78.5, 3.0], [78.6, 3.0], [78.7, 3.0], [78.8, 3.0], [78.9, 3.0], [79.0, 3.0], [79.1, 3.0], [79.2, 3.0], [79.3, 3.0], [79.4, 3.0], [79.5, 3.0], [79.6, 3.0], [79.7, 3.0], [79.8, 3.0], [79.9, 3.0], [80.0, 3.0], [80.1, 3.0], [80.2, 3.0], [80.3, 3.0], [80.4, 3.0], [80.5, 3.0], [80.6, 3.0], [80.7, 3.0], [80.8, 3.0], [80.9, 3.0], [81.0, 3.0], [81.1, 3.0], [81.2, 3.0], [81.3, 3.0], [81.4, 3.0], [81.5, 3.0], [81.6, 3.0], [81.7, 3.0], [81.8, 3.0], [81.9, 3.0], [82.0, 3.0], [82.1, 3.0], [82.2, 3.0], [82.3, 3.0], [82.4, 3.0], [82.5, 3.0], [82.6, 3.0], [82.7, 3.0], [82.8, 3.0], [82.9, 3.0], [83.0, 3.0], [83.1, 3.0], [83.2, 3.0], [83.3, 3.0], [83.4, 3.0], [83.5, 3.0], [83.6, 3.0], [83.7, 3.0], [83.8, 3.0], [83.9, 3.0], [84.0, 3.0], [84.1, 3.0], [84.2, 3.0], [84.3, 3.0], [84.4, 3.0], [84.5, 3.0], [84.6, 3.0], [84.7, 3.0], [84.8, 3.0], [84.9, 3.0], [85.0, 3.0], [85.1, 3.0], [85.2, 3.0], [85.3, 3.0], [85.4, 3.0], [85.5, 3.0], [85.6, 3.0], [85.7, 3.0], [85.8, 3.0], [85.9, 3.0], [86.0, 3.0], [86.1, 3.0], [86.2, 3.0], [86.3, 3.0], [86.4, 3.0], [86.5, 3.0], [86.6, 3.0], [86.7, 3.0], [86.8, 3.0], [86.9, 3.0], [87.0, 3.0], [87.1, 3.0], [87.2, 3.0], [87.3, 3.0], [87.4, 3.0], [87.5, 3.0], [87.6, 3.0], [87.7, 3.0], [87.8, 3.0], [87.9, 3.0], [88.0, 3.0], [88.1, 3.0], [88.2, 3.0], [88.3, 3.0], [88.4, 3.0], [88.5, 3.0], [88.6, 3.0], [88.7, 3.0], [88.8, 3.0], [88.9, 3.0], [89.0, 3.0], [89.1, 3.0], [89.2, 3.0], [89.3, 3.0], [89.4, 3.0], [89.5, 3.0], [89.6, 3.0], [89.7, 3.0], [89.8, 3.0], [89.9, 3.0], [90.0, 3.0], [90.1, 3.0], [90.2, 3.0], [90.3, 3.0], [90.4, 3.0], [90.5, 3.0], [90.6, 3.0], [90.7, 3.0], [90.8, 3.0], [90.9, 3.0], [91.0, 3.0], [91.1, 3.0], [91.2, 3.0], [91.3, 3.0], [91.4, 3.0], [91.5, 3.0], [91.6, 3.0], [91.7, 3.0], [91.8, 3.0], [91.9, 3.0], [92.0, 3.0], [92.1, 3.0], [92.2, 4.0], [92.3, 4.0], [92.4, 4.0], [92.5, 4.0], [92.6, 4.0], [92.7, 4.0], [92.8, 4.0], [92.9, 4.0], [93.0, 4.0], [93.1, 4.0], [93.2, 4.0], [93.3, 4.0], [93.4, 4.0], [93.5, 4.0], [93.6, 4.0], [93.7, 4.0], [93.8, 4.0], [93.9, 4.0], [94.0, 4.0], [94.1, 4.0], [94.2, 4.0], [94.3, 4.0], [94.4, 4.0], [94.5, 4.0], [94.6, 4.0], [94.7, 4.0], [94.8, 4.0], [94.9, 4.0], [95.0, 4.0], [95.1, 4.0], [95.2, 4.0], [95.3, 4.0], [95.4, 4.0], [95.5, 4.0], [95.6, 4.0], [95.7, 4.0], [95.8, 4.0], [95.9, 4.0], [96.0, 4.0], [96.1, 4.0], [96.2, 4.0], [96.3, 4.0], [96.4, 4.0], [96.5, 4.0], [96.6, 4.0], [96.7, 4.0], [96.8, 4.0], [96.9, 4.0], [97.0, 4.0], [97.1, 4.0], [97.2, 4.0], [97.3, 4.0], [97.4, 4.0], [97.5, 4.0], [97.6, 4.0], [97.7, 4.0], [97.8, 4.0], [97.9, 4.0], [98.0, 4.0], [98.1, 4.0], [98.2, 4.0], [98.3, 4.0], [98.4, 4.0], [98.5, 4.0], [98.6, 4.0], [98.7, 4.0], [98.8, 4.0], [98.9, 4.0], [99.0, 4.0], [99.1, 4.0], [99.2, 5.0], [99.3, 5.0], [99.4, 5.0], [99.5, 5.0], [99.6, 5.0], [99.7, 5.0], [99.8, 5.0], [99.9, 6.0], [100.0, 67.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 123037.0, "minX": 0.0, "maxY": 123037.0, "series": [{"data": [[0.0, 123037.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4.9E-324, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 123037.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 123037.0, "series": [{"data": [[0.0, 123037.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 4.9E-324, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 95.3753387533876, "minX": 1.62936324E12, "maxY": 1970.2579739122223, "series": [{"data": [[1.6293633E12, 493.01492202903495], [1.62936324E12, 95.3753387533876], [1.62936336E12, 188.00267544762298]], "isOverall": false, "label": "Spike", "isController": false}, {"data": [[1.62936348E12, 274.6607565011816], [1.62936342E12, 691.2571877380072], [1.62936336E12, 404.26161424782043]], "isOverall": false, "label": "Load", "isController": false}, {"data": [[1.62936348E12, 286.82780163998416], [1.62936366E12, 670.175775775776], [1.6293636E12, 1970.2579739122223], [1.62936354E12, 1389.5889042501037]], "isOverall": false, "label": "Stress", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62936366E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.9047619047619045, "minX": 1.0, "maxY": 23.5, "series": [{"data": [[2.0, 0.9591836734693876], [3.0, 1.0681818181818181], [4.0, 1.0754716981132075], [5.0, 1.2], [6.0, 1.1454545454545457], [7.0, 1.2456140350877192], [8.0, 7.913793103448277], [9.0, 1.4714285714285715], [10.0, 1.313432835820895], [11.0, 1.6406250000000004], [12.0, 1.4181818181818178], [13.0, 3.355932203389832], [14.0, 1.4843749999999998], [15.0, 1.4507042253521132], [16.0, 1.4000000000000001], [17.0, 1.388888888888889], [18.0, 1.3620689655172415], [19.0, 1.2758620689655173], [20.0, 1.0789473684210527], [21.0, 1.4561403508771928], [22.0, 0.9433962264150945], [23.0, 1.5781250000000002], [24.0, 0.989795918367347], [25.0, 1.3673469387755097], [26.0, 1.3499999999999999], [27.0, 1.215384615384615], [28.0, 1.1525423728813557], [29.0, 1.2950819672131146], [30.0, 1.5949367088607596], [31.0, 1.1212121212121215], [32.0, 1.2142857142857149], [33.0, 1.1935483870967747], [34.0, 1.093333333333333], [35.0, 1.6575342465753427], [36.0, 1.1066666666666667], [37.0, 1.34375], [38.0, 1.1794871794871797], [39.0, 1.252173913043479], [40.0, 1.4705882352941175], [41.0, 1.3207547169811324], [42.0, 1.3194444444444442], [43.0, 1.4459459459459465], [44.0, 1.0930232558139534], [45.0, 1.4153846153846155], [46.0, 1.1944444444444449], [47.0, 1.1521739130434792], [48.0, 1.3851851851851857], [49.0, 1.0294117647058827], [50.0, 1.3333333333333335], [51.0, 1.1578947368421055], [52.0, 1.4523809523809519], [53.0, 1.2307692307692308], [54.0, 1.2758620689655176], [55.0, 1.325], [56.0, 1.166666666666667], [57.0, 1.4036697247706431], [58.0, 1.1627906976744187], [59.0, 1.1935483870967747], [60.0, 1.3428571428571432], [61.0, 1.2499999999999998], [62.0, 1.214285714285714], [63.0, 1.2857142857142856], [64.0, 1.3243243243243241], [65.0, 1.1025641025641029], [66.0, 1.3831775700934579], [67.0, 1.448979591836735], [68.0, 1.1359223300970875], [69.0, 1.255813953488372], [70.0, 1.2432432432432439], [71.0, 1.1929824561403513], [72.0, 1.2121212121212126], [73.0, 1.1489361702127658], [74.0, 1.3333333333333333], [75.0, 1.1136363636363638], [76.0, 1.1636363636363634], [77.0, 1.146788990825688], [78.0, 1.3658536585365855], [79.0, 1.207547169811321], [80.0, 1.119047619047619], [81.0, 1.2000000000000002], [82.0, 1.2844827586206895], [83.0, 1.2142857142857144], [84.0, 1.1521739130434785], [85.0, 1.2750000000000001], [86.0, 1.235294117647059], [87.0, 1.3870967741935478], [88.0, 1.2366412213740463], [89.0, 1.0984848484848484], [90.0, 1.2926829268292683], [91.0, 1.2000000000000002], [92.0, 1.1818181818181819], [93.0, 1.2888888888888888], [94.0, 1.25], [95.0, 1.173913043478261], [96.0, 1.122302158273381], [97.0, 1.5128205128205126], [98.0, 1.229166666666667], [99.0, 1.1500000000000006], [100.0, 1.2380952380952384], [101.0, 1.2553191489361706], [102.0, 1.2765957446808514], [103.0, 1.2926829268292688], [104.0, 1.163265306122449], [105.0, 1.0959999999999994], [106.0, 1.3023255813953487], [107.0, 1.3499999999999999], [108.0, 1.2641509433962264], [109.0, 1.1063829787234039], [110.0, 1.1304347826086962], [111.0, 1.3043478260869568], [112.0, 1.4999999999999996], [113.0, 1.1698113207547167], [114.0, 1.261904761904762], [115.0, 1.190476190476191], [116.0, 1.18], [117.0, 1.1999999999999997], [118.0, 1.1500000000000001], [119.0, 1.1607142857142856], [120.0, 1.1904761904761907], [121.0, 1.2093023255813955], [122.0, 1.1320754716981134], [123.0, 1.2658959537572252], [124.0, 1.1470588235294128], [125.0, 1.1777777777777776], [126.0, 1.340425531914894], [127.0, 1.387755102040816], [128.0, 1.2954545454545459], [129.0, 1.1555555555555557], [130.0, 1.5384615384615388], [131.0, 1.2083333333333337], [132.0, 1.169811320754717], [133.0, 1.1666666666666667], [134.0, 1.1521739130434783], [135.0, 1.163934426229508], [136.0, 1.4418604651162792], [137.0, 1.3478260869565215], [138.0, 1.2244897959183676], [139.0, 1.3617021276595749], [140.0, 1.3770491803278688], [141.0, 1.339622641509434], [142.0, 1.3958333333333335], [143.0, 1.3636363636363635], [144.0, 1.1379310344827587], [145.0, 1.2826086956521738], [146.0, 1.3673469387755104], [147.0, 1.1], [148.0, 1.2424242424242433], [149.0, 1.2244897959183678], [150.0, 1.2033898305084747], [151.0, 1.2040816326530617], [152.0, 1.2222222222222223], [153.0, 1.32], [154.0, 1.0851063829787233], [155.0, 1.0980392156862746], [156.0, 1.3529411764705879], [157.0, 1.1379310344827587], [158.0, 1.1951219512195121], [159.0, 1.3859649122807016], [160.0, 1.2950819672131153], [161.0, 1.212962962962963], [162.0, 1.3389830508474578], [163.0, 1.183673469387755], [164.0, 1.2241379310344829], [165.0, 1.0799999999999998], [166.0, 1.1754385964912284], [167.0, 1.1551724137931032], [168.0, 1.264150943396227], [169.0, 1.3478260869565215], [170.0, 1.4647887323943665], [171.0, 1.4545454545454546], [172.0, 1.128318584070796], [173.0, 1.306451612903226], [174.0, 1.1785714285714286], [175.0, 1.132075471698113], [176.0, 1.2452830188679243], [177.0, 1.2631578947368423], [178.0, 1.195652173913044], [179.0, 1.2130434782608701], [180.0, 1.4716981132075477], [181.0, 1.3673469387755102], [182.0, 1.2258064516129032], [183.0, 1.2444444444444445], [184.0, 1.153846153846154], [185.0, 1.2600000000000002], [186.0, 1.3050847457627117], [187.0, 1.1282051282051286], [188.0, 1.1875000000000002], [189.0, 1.319148936170213], [190.0, 1.241379310344828], [191.0, 1.3829787234042554], [192.0, 1.3469387755102042], [193.0, 1.4888888888888887], [194.0, 1.2394366197183098], [195.0, 1.2380952380952386], [196.0, 1.2968749999999996], [197.0, 1.2542372881355932], [198.0, 1.3183673469387758], [199.0, 1.3015873015873018], [200.0, 1.1818181818181817], [201.0, 1.3387096774193545], [202.0, 1.4047619047619047], [203.0, 1.1506849315068495], [204.0, 1.2162162162162165], [205.0, 1.092307692307692], [206.0, 1.1363636363636365], [207.0, 1.2957746478873238], [208.0, 1.2352941176470593], [209.0, 1.2045454545454546], [210.0, 1.2115384615384617], [211.0, 1.3], [212.0, 1.517857142857143], [213.0, 1.2857142857142858], [214.0, 1.3137254901960786], [215.0, 1.3333333333333333], [216.0, 1.521739130434782], [217.0, 1.3095238095238098], [218.0, 1.3199999999999996], [219.0, 1.3684210526315788], [220.0, 1.4047619047619047], [221.0, 1.2500000000000002], [222.0, 1.5272727272727276], [223.0, 1.4468085106382984], [224.0, 1.3541666666666667], [225.0, 1.2545454545454546], [226.0, 1.2941176470588236], [227.0, 1.5576923076923073], [228.0, 1.3220338983050846], [229.0, 1.3958333333333337], [230.0, 1.4411764705882344], [231.0, 1.6037735849056605], [232.0, 1.3275862068965518], [233.0, 1.3617021276595744], [234.0, 1.465753424657534], [235.0, 1.3111111111111111], [236.0, 1.4461538461538463], [237.0, 1.2], [238.0, 1.3174603174603177], [239.0, 1.2631578947368425], [240.0, 1.4339622641509437], [241.0, 1.2037037037037037], [242.0, 1.1960784313725492], [243.0, 1.37037037037037], [244.0, 1.4799999999999993], [245.0, 1.3673469387755102], [246.0, 1.3061224489795917], [247.0, 1.302631578947368], [248.0, 1.2600000000000002], [249.0, 1.2093023255813955], [250.0, 1.3239436619718303], [251.0, 1.5254237288135595], [252.0, 1.2555555555555566], [253.0, 1.3170731707317076], [254.0, 1.3333333333333335], [255.0, 1.2608695652173916], [257.0, 1.3548387096774193], [256.0, 1.2142857142857142], [258.0, 1.4509803921568627], [259.0, 1.4018691588785053], [260.0, 1.3333333333333335], [261.0, 1.2535211267605633], [262.0, 1.2068965517241383], [263.0, 1.2380952380952386], [264.0, 1.4423076923076923], [270.0, 1.396825396825397], [271.0, 1.3499999999999996], [268.0, 1.3870967741935485], [269.0, 1.305555555555556], [265.0, 1.2878787878787876], [266.0, 1.4166666666666665], [267.0, 1.2153846153846157], [273.0, 1.7045454545454546], [272.0, 1.474576271186441], [274.0, 2.0909090909090917], [275.0, 1.3695652173913044], [276.0, 1.3636363636363638], [277.0, 1.4883720930232556], [278.0, 1.472727272727273], [279.0, 1.515625], [280.0, 1.3125000000000002], [286.0, 1.3382352941176465], [287.0, 1.3636363636363635], [284.0, 1.4310344827586206], [285.0, 1.4673913043478257], [281.0, 1.3809523809523814], [282.0, 1.363636363636364], [283.0, 1.466666666666667], [289.0, 1.436363636363636], [288.0, 1.1702127659574466], [290.0, 1.2978723404255321], [291.0, 1.3734939759036149], [292.0, 1.3571428571428574], [293.0, 1.4554455445544554], [294.0, 1.3148148148148149], [295.0, 1.5232558139534884], [296.0, 1.3000000000000003], [302.0, 1.1538461538461542], [303.0, 1.0952380952380956], [300.0, 1.4205012853470396], [301.0, 1.5000000000000002], [297.0, 1.4150943396226416], [298.0, 1.4799999999999998], [299.0, 1.4000000000000001], [305.0, 1.4680851063829792], [304.0, 1.3500000000000003], [306.0, 1.3250000000000002], [307.0, 1.2352941176470593], [308.0, 1.2631578947368423], [309.0, 1.302325581395349], [310.0, 1.1428571428571428], [311.0, 1.15625], [312.0, 1.4042553191489366], [318.0, 1.4848484848484849], [319.0, 1.487179487179487], [316.0, 1.5365853658536586], [317.0, 1.4054054054054057], [313.0, 1.2105263157894741], [314.0, 1.1315789473684212], [315.0, 1.472222222222222], [321.0, 1.5000000000000002], [320.0, 1.5227272727272725], [322.0, 1.5116279069767442], [323.0, 1.6923076923076925], [324.0, 1.4000000000000001], [325.0, 1.490566037735849], [326.0, 1.4878048780487805], [327.0, 1.5263157894736838], [328.0, 1.4864864864864862], [334.0, 1.4594594594594592], [335.0, 1.5454545454545454], [332.0, 1.4210526315789473], [333.0, 1.2340425531914891], [329.0, 1.4736842105263157], [330.0, 1.5476190476190481], [331.0, 1.5], [337.0, 1.465116279069767], [336.0, 1.4615384615384621], [338.0, 1.3000000000000003], [339.0, 1.4146341463414631], [340.0, 1.3157894736842108], [341.0, 1.2340425531914891], [342.0, 1.3636363636363638], [343.0, 1.1956521739130437], [344.0, 1.3777777777777778], [350.0, 1.1052631578947367], [351.0, 1.4358974358974357], [348.0, 1.2954545454545456], [349.0, 1.5000000000000002], [345.0, 1.5652173913043472], [346.0, 1.5675675675675673], [347.0, 1.375], [353.0, 1.3947368421052633], [352.0, 1.1555555555555557], [354.0, 1.3], [355.0, 1.1199999999999999], [356.0, 1.3783783783783787], [357.0, 1.3720930232558144], [358.0, 1.4893617021276593], [359.0, 1.5128205128205128], [360.0, 1.469387755102041], [366.0, 1.6097560975609755], [367.0, 1.9069767441860463], [364.0, 1.2765957446808514], [365.0, 1.4888888888888892], [361.0, 1.4], [362.0, 1.409090909090909], [363.0, 1.5128205128205128], [369.0, 1.5952380952380953], [368.0, 1.7499999999999996], [370.0, 1.6874999999999998], [371.0, 1.680851063829787], [372.0, 1.7391304347826082], [373.0, 1.5714285714285714], [374.0, 1.6041666666666665], [375.0, 1.5250000000000001], [377.0, 1.6], [376.0, 1.6585365853658534], [382.0, 1.4545454545454546], [383.0, 1.4791666666666665], [380.0, 1.6363636363636362], [381.0, 1.4999999999999998], [378.0, 1.653061224489796], [379.0, 1.538461538461539], [385.0, 1.3043478260869568], [384.0, 1.5], [386.0, 1.666666666666667], [387.0, 1.4565217391304346], [388.0, 1.5370370370370374], [389.0, 1.5111111111111108], [390.0, 1.4042553191489364], [391.0, 1.4666666666666666], [392.0, 1.456521739130435], [398.0, 1.6862745098039216], [399.0, 1.5365853658536583], [396.0, 1.7758620689655173], [397.0, 1.7142857142857142], [393.0, 1.5000000000000002], [394.0, 1.5967741935483872], [395.0, 1.8], [401.0, 1.7413793103448274], [400.0, 1.6666666666666665], [402.0, 1.7115384615384617], [403.0, 1.6481481481481481], [404.0, 1.6874999999999996], [405.0, 1.520833333333334], [406.0, 1.3541666666666667], [407.0, 1.4629629629629632], [409.0, 1.5384615384615383], [408.0, 1.487179487179487], [414.0, 1.78125], [415.0, 1.7142857142857137], [412.0, 1.6388888888888886], [413.0, 1.7058823529411766], [410.0, 1.5454545454545452], [411.0, 1.5909090909090906], [417.0, 1.702127659574468], [416.0, 1.846153846153846], [418.0, 1.8157894736842104], [419.0, 1.9047619047619044], [420.0, 1.7954545454545454], [421.0, 1.7727272727272725], [422.0, 2.0], [423.0, 1.7499999999999998], [424.0, 1.7045454545454544], [430.0, 1.7941176470588236], [431.0, 1.7499999999999998], [428.0, 1.6285714285714281], [429.0, 1.6122448979591837], [425.0, 1.7749999999999997], [426.0, 1.6363636363636362], [427.0, 1.729166666666667], [433.0, 1.6666666666666663], [432.0, 1.717948717948718], [434.0, 1.8], [435.0, 1.7297297297297294], [436.0, 1.5957446808510634], [437.0, 1.935483870967742], [438.0, 1.755102040816326], [439.0, 1.8620689655172415], [440.0, 1.5098039215686272], [446.0, 1.3389830508474578], [447.0, 1.654545454545454], [444.0, 1.352941176470588], [445.0, 1.274509803921569], [441.0, 1.6052631578947367], [442.0, 1.4583333333333333], [443.0, 1.676470588235294], [449.0, 1.392156862745098], [448.0, 1.5714285714285716], [450.0, 1.4545454545454548], [451.0, 1.5531914893617018], [452.0, 1.594594594594595], [453.0, 1.431818181818182], [454.0, 1.4999999999999998], [455.0, 1.4222222222222225], [456.0, 1.64], [462.0, 1.8333333333333335], [463.0, 1.7608695652173916], [460.0, 1.3777777777777778], [461.0, 1.5999999999999999], [457.0, 1.3783783783783783], [458.0, 1.3255813953488376], [459.0, 1.170212765957447], [465.0, 1.763157894736842], [464.0, 1.7555555555555553], [466.0, 1.8113207547169812], [467.0, 1.9062499999999998], [468.0, 1.8703703703703705], [469.0, 1.833333333333333], [470.0, 1.65], [471.0, 2.3939393939393945], [474.0, 1.7538461538461534], [476.0, 1.6111111111111112], [477.0, 1.6400000000000001], [478.0, 1.5], [479.0, 1.2820512820512822], [473.0, 1.4285714285714286], [472.0, 1.5399999999999998], [475.0, 1.7435897435897432], [481.0, 1.7000000000000002], [480.0, 1.607142857142857], [482.0, 1.7169811320754715], [483.0, 1.8409090909090906], [484.0, 1.6086956521739129], [485.0, 1.8285714285714285], [486.0, 1.8571428571428572], [487.0, 1.8723404255319143], [488.0, 1.6666666666666663], [494.0, 1.6888888888888884], [495.0, 1.4999999999999996], [492.0, 1.7368421052631577], [493.0, 1.773584905660377], [489.0, 1.897959183673469], [490.0, 1.8571428571428565], [491.0, 1.7169811320754718], [498.0, 1.3793103448275863], [497.0, 1.7446808510638299], [496.0, 1.7727272727272727], [499.0, 1.5319148936170217], [508.0, 1.8333333333333333], [509.0, 1.7323943661971832], [510.0, 1.7714285714285714], [511.0, 1.843137254901961], [500.0, 1.6078431372549016], [501.0, 1.625], [502.0, 1.6279069767441858], [503.0, 1.5789473684210524], [504.0, 1.5199999999999996], [505.0, 1.5555555555555554], [507.0, 1.577777777777778], [506.0, 1.7105263157894735], [514.0, 1.7586206896551722], [512.0, 1.8541666666666665], [526.0, 1.723076923076923], [524.0, 1.722222222222222], [522.0, 1.8620689655172409], [516.0, 1.7647058823529402], [518.0, 1.7435897435897436], [528.0, 1.7499999999999996], [542.0, 1.9104477611940298], [540.0, 1.836734693877551], [538.0, 1.8676470588235292], [536.0, 1.8275862068965514], [530.0, 1.9399999999999997], [532.0, 1.9375000000000002], [534.0, 1.607142857142857], [520.0, 1.7666666666666666], [546.0, 1.854545454545454], [544.0, 1.7499999999999998], [558.0, 1.7916666666666665], [556.0, 1.8208955223880596], [554.0, 1.925925925925926], [548.0, 1.8593749999999996], [550.0, 1.85], [560.0, 1.7464788732394363], [574.0, 1.8478260869565215], [572.0, 1.8478260869565215], [570.0, 1.9999999999999998], [568.0, 1.9062499999999998], [562.0, 1.7499999999999998], [564.0, 1.8], [566.0, 1.9069767441860466], [552.0, 1.7575757575757576], [578.0, 1.9500000000000002], [576.0, 1.8510638297872342], [590.0, 1.902439024390244], [588.0, 1.8076923076923073], [586.0, 1.810810810810811], [580.0, 1.8048780487804876], [582.0, 1.8518518518518523], [592.0, 1.9347826086956519], [606.0, 1.8444444444444443], [604.0, 1.9294117647058824], [602.0, 1.8529411764705876], [600.0, 1.878787878787879], [594.0, 1.9000000000000001], [596.0, 1.878787878787879], [598.0, 1.8888888888888886], [584.0, 1.8604651162790693], [610.0, 1.7777777777777775], [608.0, 1.8249999999999995], [622.0, 1.7419354838709673], [620.0, 1.8999999999999997], [618.0, 1.8513513513513513], [612.0, 1.8620689655172413], [614.0, 1.903846153846154], [624.0, 1.6862745098039218], [638.0, 1.8823529411764708], [636.0, 1.7333333333333334], [634.0, 1.7352941176470587], [632.0, 1.8799999999999997], [626.0, 2.0892857142857144], [628.0, 1.9215686274509804], [630.0, 1.9259259259259258], [616.0, 1.7647058823529407], [642.0, 1.7894736842105263], [640.0, 1.872727272727273], [654.0, 1.8870967741935478], [652.0, 2.138888888888889], [650.0, 1.9230769230769231], [644.0, 1.7209302325581388], [646.0, 1.6444444444444442], [656.0, 1.7499999999999996], [670.0, 1.925], [668.0, 1.8793103448275854], [666.0, 1.9285714285714284], [664.0, 1.9629629629629628], [658.0, 1.9117647058823528], [660.0, 1.8749999999999998], [662.0, 1.9354838709677418], [648.0, 1.7555555555555553], [674.0, 1.9310344827586206], [672.0, 1.8965517241379308], [686.0, 1.9347826086956519], [684.0, 1.872727272727273], [682.0, 1.8157894736842106], [676.0, 1.8823529411764708], [678.0, 1.6428571428571426], [688.0, 2.0294117647058822], [702.0, 1.857142857142857], [700.0, 1.9185801713586306], [698.0, 1.8928571428571426], [696.0, 1.7777777777777772], [690.0, 1.905263157894736], [692.0, 1.696969696969697], [694.0, 1.901315789473684], [680.0, 2.0689655172413786], [706.0, 2.0], [704.0, 1.9285714285714284], [718.0, 1.7777777777777777], [714.0, 1.8666666666666665], [716.0, 2.1333333333333337], [708.0, 1.9444444444444444], [710.0, 2.0], [720.0, 1.9499999999999997], [734.0, 1.909090909090909], [732.0, 1.8571428571428572], [730.0, 1.7000000000000002], [728.0, 1.6], [722.0, 2.0], [724.0, 1.846153846153846], [726.0, 1.75], [712.0, 1.7272727272727275], [738.0, 1.5555555555555556], [736.0, 1.692307692307692], [750.0, 2.0], [748.0, 2.0], [746.0, 1.8124999999999998], [740.0, 1.8947368421052628], [742.0, 1.909090909090909], [752.0, 2.0], [766.0, 1.8], [764.0, 3.235294117647059], [762.0, 1.7999999999999998], [760.0, 1.8666666666666667], [754.0, 1.8235294117647056], [756.0, 2.0], [758.0, 1.8666666666666665], [744.0, 1.7142857142857142], [770.0, 2.0], [768.0, 2.0], [782.0, 2.0476190476190474], [780.0, 2.0], [778.0, 2.045454545454545], [772.0, 2.0], [774.0, 2.0909090909090913], [784.0, 2.272727272727273], [798.0, 2.1250000000000004], [796.0, 2.3125], [794.0, 1.8888888888888888], [792.0, 1.9333333333333331], [786.0, 2.0], [788.0, 2.0], [790.0, 2.0], [776.0, 2.0], [802.0, 2.4444444444444446], [800.0, 1.909090909090909], [814.0, 1.9545454545454546], [812.0, 1.9473684210526314], [810.0, 2.0714285714285716], [804.0, 1.9523809523809523], [806.0, 1.9285714285714284], [816.0, 1.9285714285714286], [830.0, 2.230769230769231], [828.0, 2.0], [826.0, 2.0], [824.0, 1.9499999999999997], [818.0, 2.2173913043478257], [820.0, 2.0], [822.0, 2.1428571428571432], [808.0, 1.9285714285714282], [836.0, 2.1176470588235303], [838.0, 2.0], [832.0, 2.181818181818182], [846.0, 2.0], [844.0, 1.9333333333333331], [842.0, 2.083333333333333], [834.0, 2.8], [856.0, 1.9375], [858.0, 1.941176470588235], [860.0, 2.0], [862.0, 1.909090909090909], [848.0, 2.0555555555555554], [850.0, 1.857142857142857], [852.0, 2.0], [854.0, 1.875], [840.0, 2.2352941176470593], [866.0, 2.0], [864.0, 2.166666666666667], [878.0, 2.2], [876.0, 2.071428571428571], [874.0, 2.1666666666666674], [868.0, 2.0833333333333335], [870.0, 2.090909090909091], [880.0, 2.0], [894.0, 2.1250000000000004], [892.0, 2.1], [890.0, 2.0], [888.0, 2.071428571428571], [882.0, 2.157894736842105], [884.0, 2.0], [886.0, 2.0], [872.0, 2.0], [898.0, 1.9], [896.0, 2.142857142857143], [910.0, 2.3076923076923084], [908.0, 2.333333333333333], [900.0, 2.0], [902.0, 1.8999999999999997], [912.0, 2.2222222222222228], [926.0, 2.571428571428571], [924.0, 2.181818181818182], [922.0, 2.1000000000000005], [920.0, 2.1666666666666674], [914.0, 2.25], [916.0, 1.8333333333333333], [918.0, 2.1428571428571432], [904.0, 2.4374999999999996], [906.0, 1.923076923076923], [930.0, 2.111111111111111], [928.0, 2.2222222222222223], [942.0, 2.1111111111111116], [940.0, 2.3888888888888897], [938.0, 1.8888888888888888], [932.0, 2.1000000000000005], [934.0, 2.2], [944.0, 2.1666666666666674], [958.0, 1.8333333333333333], [956.0, 1.7999999999999998], [954.0, 2.272727272727273], [952.0, 1.8333333333333333], [946.0, 2.1333333333333337], [948.0, 2.083333333333333], [950.0, 2.2727272727272734], [936.0, 1.9230769230769231], [962.0, 2.3333333333333335], [960.0, 2.285714285714286], [974.0, 2.230769230769231], [972.0, 2.181818181818182], [970.0, 2.307692307692308], [964.0, 2.181818181818182], [966.0, 2.3333333333333335], [976.0, 2.153846153846154], [990.0, 2.2222222222222223], [988.0, 2.25], [986.0, 2.0833333333333335], [984.0, 2.3333333333333335], [978.0, 2.153846153846154], [980.0, 2.25], [982.0, 2.25], [968.0, 2.1428571428571432], [994.0, 2.0666666666666664], [992.0, 2.733333333333333], [1006.0, 2.142857142857143], [1004.0, 2.3000000000000003], [1002.0, 2.375], [996.0, 2.4], [998.0, 2.2777777777777777], [1008.0, 2.7499999999999996], [1022.0, 2.2333333333333325], [1020.0, 2.0], [1018.0, 2.181818181818182], [1016.0, 2.111111111111111], [1010.0, 2.111111111111111], [1012.0, 2.4285714285714293], [1014.0, 2.1], [1000.0, 2.1536926147704603], [1028.0, 2.733333333333333], [1024.0, 2.4545454545454546], [1052.0, 2.1250000000000004], [1048.0, 2.3000000000000003], [1044.0, 2.6999999999999997], [1032.0, 2.1666666666666674], [1036.0, 2.75], [1056.0, 2.3333333333333335], [1084.0, 2.5833333333333335], [1080.0, 2.5], [1076.0, 2.357142857142857], [1072.0, 2.6666666666666665], [1060.0, 2.375], [1064.0, 2.5], [1068.0, 2.3333333333333335], [1040.0, 2.5], [1092.0, 2.5454545454545454], [1088.0, 2.125], [1116.0, 2.0], [1112.0, 2.4999999999999996], [1108.0, 2.416666666666667], [1096.0, 2.2222222222222223], [1100.0, 2.428571428571429], [1120.0, 2.6666666666666665], [1148.0, 2.5555555555555554], [1144.0, 2.2857142857142856], [1140.0, 2.611111111111111], [1136.0, 2.6999999999999997], [1124.0, 2.416666666666667], [1128.0, 2.166666666666667], [1132.0, 2.8], [1104.0, 2.4615384615384612], [1156.0, 2.333333333333334], [1152.0, 2.875], [1180.0, 2.727272727272727], [1176.0, 2.6874999999999996], [1172.0, 2.625], [1160.0, 2.5], [1164.0, 2.4999999999999996], [1184.0, 2.3000000000000003], [1212.0, 2.5714285714285716], [1208.0, 2.4000000000000004], [1204.0, 2.4285714285714284], [1200.0, 2.597365610537554], [1188.0, 2.4444444444444446], [1192.0, 2.3000000000000007], [1196.0, 2.4166666666666665], [1168.0, 2.714285714285714], [1220.0, 2.5], [1228.0, 2.5714285714285716], [1216.0, 2.6], [1244.0, 2.625], [1240.0, 2.6999999999999997], [1236.0, 2.75], [1224.0, 2.4705882352941178], [1264.0, 2.5], [1268.0, 2.692307692307692], [1272.0, 2.4666666666666663], [1276.0, 2.7499999999999996], [1248.0, 2.375], [1252.0, 3.0], [1256.0, 2.7647058823529407], [1260.0, 2.5384615384615388], [1232.0, 2.230769230769231], [1284.0, 2.571428571428571], [1280.0, 2.3000000000000003], [1308.0, 2.818181818181818], [1304.0, 2.8333333333333335], [1300.0, 2.923076923076923], [1288.0, 2.692307692307692], [1292.0, 2.9333333333333336], [1312.0, 2.9230769230769234], [1340.0, 2.4444444444444446], [1336.0, 2.7857142857142856], [1332.0, 2.4999999999999996], [1328.0, 2.9047619047619047], [1316.0, 2.9375], [1320.0, 2.8], [1324.0, 2.5833333333333335], [1296.0, 2.75], [1348.0, 2.7058823529411766], [1344.0, 2.714285714285713], [1368.0, 2.2857142857142856], [1372.0, 2.846153846153846], [1364.0, 2.7333333333333334], [1352.0, 2.8125], [1356.0, 2.736842105263158], [1376.0, 2.9230769230769234], [1404.0, 2.2307692307692313], [1400.0, 2.6773049645390032], [1396.0, 2.285714285714286], [1392.0, 2.823529411764706], [1380.0, 2.5], [1384.0, 3.3000000000000003], [1388.0, 2.363636363636364], [1360.0, 2.3333333333333335], [1412.0, 2.6470588235294117], [1408.0, 2.7894736842105265], [1436.0, 2.733333333333333], [1432.0, 2.5217391304347823], [1428.0, 2.7058823529411766], [1416.0, 2.3846153846153846], [1420.0, 2.4375], [1440.0, 2.5625], [1468.0, 2.5238095238095237], [1464.0, 2.571428571428571], [1460.0, 2.764705882352942], [1456.0, 2.5499999999999994], [1444.0, 2.466666666666667], [1448.0, 2.7222222222222228], [1452.0, 2.727272727272727], [1424.0, 2.4375], [1476.0, 2.666666666666667], [1472.0, 2.576923076923077], [1500.0, 2.740223463687148], [1492.0, 2.6428571428571423], [1496.0, 2.285714285714286], [1480.0, 5.111111111111111], [1484.0, 2.75], [1504.0, 2.727272727272727], [1532.0, 2.3333333333333335], [1528.0, 2.5], [1524.0, 3.3333333333333335], [1520.0, 2.5714285714285716], [1508.0, 2.846153846153846], [1512.0, 2.0], [1516.0, 2.75], [1488.0, 2.428571428571429], [1540.0, 2.833333333333333], [1536.0, 2.875], [1544.0, 3.2], [1548.0, 2.3333333333333335], [1552.0, 3.0], [1556.0, 2.7499999999999996], [1560.0, 2.75], [1564.0, 2.7999999999999994], [1568.0, 2.5], [1592.0, 2.75], [1596.0, 2.2], [1584.0, 2.75], [1588.0, 2.4], [1572.0, 2.5], [1576.0, 2.5714285714285716], [1580.0, 2.5], [1604.0, 2.727272727272727], [1600.0, 2.715965787598001], [1608.0, 2.625], [1612.0, 2.6], [1616.0, 2.7142857142857144], [1620.0, 3.0], [1624.0, 2.8], [1628.0, 2.7499999999999996], [1632.0, 2.6666666666666665], [1656.0, 2.5], [1660.0, 2.3333333333333335], [1648.0, 2.8], [1652.0, 2.5], [1636.0, 2.7777777777777772], [1640.0, 2.6], [1644.0, 2.6249999999999996], [1668.0, 2.4000000000000004], [1664.0, 2.833333333333333], [1672.0, 2.428571428571429], [1676.0, 2.8], [1680.0, 2.666666666666666], [1684.0, 2.0], [1688.0, 2.3333333333333335], [1692.0, 2.6], [1696.0, 2.3333333333333335], [1720.0, 2.7142857142857144], [1724.0, 2.6], [1712.0, 2.6], [1716.0, 2.4], [1700.0, 2.8749999999999996], [1704.0, 3.0], [1708.0, 2.6666666666666665], [1732.0, 2.9999999999999996], [1728.0, 2.6], [1736.0, 2.8], [1740.0, 2.4], [1744.0, 2.8], [1748.0, 2.5714285714285716], [1752.0, 2.3333333333333335], [1756.0, 2.5], [1760.0, 2.6666666666666665], [1784.0, 2.7499999999999996], [1788.0, 3.0], [1776.0, 3.25], [1780.0, 2.4285714285714284], [1764.0, 2.75], [1768.0, 2.6], [1772.0, 3.0], [1796.0, 2.6], [1792.0, 2.8749999999999996], [1800.0, 2.8307198859586666], [1804.0, 2.2222222222222228], [1808.0, 2.6666666666666665], [1812.0, 3.1666666666666665], [1816.0, 2.25], [1820.0, 2.3333333333333335], [1824.0, 2.714285714285714], [1848.0, 2.857142857142857], [1852.0, 2.6666666666666665], [1840.0, 2.6363636363636362], [1844.0, 6.476190476190475], [1828.0, 2.375], [1832.0, 2.6], [1836.0, 3.2222222222222223], [1860.0, 2.7272727272727266], [1856.0, 2.2], [1864.0, 2.8], [1868.0, 2.7499999999999996], [1872.0, 3.2222222222222223], [1876.0, 2.8749999999999996], [1880.0, 2.5], [1884.0, 3.272727272727273], [1888.0, 3.0], [1912.0, 3.0], [1916.0, 3.090909090909091], [1904.0, 3.727272727272727], [1908.0, 2.7777777777777777], [1892.0, 3.0769230769230766], [1896.0, 2.666666666666667], [1900.0, 4.333333333333333], [1924.0, 3.416666666666667], [1920.0, 3.0000000000000004], [1928.0, 3.375], [1932.0, 3.181818181818182], [1936.0, 3.5454545454545454], [1940.0, 3.25], [1944.0, 3.3000000000000003], [1948.0, 2.9999999999999996], [1952.0, 3.1250000000000004], [1976.0, 2.9375], [1980.0, 2.611111111111111], [1968.0, 3.083333333333333], [1972.0, 3.3846153846153846], [1956.0, 3.0], [1960.0, 3.3000000000000003], [1964.0, 2.6999999999999993], [1984.0, 3.461538461538462], [1988.0, 3.2], [1992.0, 3.2183908045977003], [1996.0, 2.833333333333333], [2000.0, 3.38118005569275], [1029.0, 1.9999999999999996], [1025.0, 2.625], [1053.0, 2.3333333333333335], [1049.0, 2.5], [1045.0, 2.5384615384615388], [1033.0, 2.285714285714286], [1037.0, 2.6363636363636362], [1057.0, 2.0], [1085.0, 2.2857142857142856], [1081.0, 2.3846153846153846], [1077.0, 2.375], [1073.0, 2.416666666666667], [1061.0, 2.625], [1065.0, 2.5000000000000004], [1069.0, 2.111111111111111], [1041.0, 2.571428571428571], [1093.0, 2.2], [1101.0, 2.5], [1089.0, 2.1250000000000004], [1117.0, 2.5454545454545454], [1113.0, 2.25], [1109.0, 2.6666666666666665], [1097.0, 2.5], [1137.0, 2.4], [1141.0, 2.538461538461538], [1145.0, 2.7142857142857144], [1149.0, 2.5555555555555554], [1121.0, 2.1111111111111116], [1125.0, 2.4000000000000004], [1129.0, 2.75], [1133.0, 2.9375], [1105.0, 2.25], [1157.0, 2.7999999999999994], [1153.0, 3.0833333333333335], [1181.0, 2.285714285714286], [1177.0, 2.7777777777777777], [1173.0, 2.3000000000000003], [1161.0, 2.625], [1165.0, 2.4999999999999996], [1185.0, 2.25], [1213.0, 2.111111111111111], [1209.0, 2.6538461538461537], [1205.0, 2.4615384615384612], [1201.0, 2.5], [1189.0, 2.5999999999999996], [1193.0, 2.4285714285714284], [1197.0, 2.4444444444444446], [1169.0, 2.818181818181818], [1221.0, 2.416666666666667], [1217.0, 2.833333333333334], [1245.0, 2.6363636363636362], [1241.0, 2.7142857142857144], [1237.0, 2.5999999999999996], [1225.0, 2.4000000000000004], [1229.0, 2.375], [1249.0, 2.583333333333333], [1277.0, 2.5454545454545454], [1273.0, 2.3333333333333335], [1269.0, 2.80952380952381], [1265.0, 2.4], [1253.0, 2.7272727272727266], [1257.0, 2.2142857142857144], [1261.0, 2.75], [1233.0, 2.3846153846153846], [1285.0, 2.583333333333333], [1281.0, 2.615384615384615], [1309.0, 2.7777777777777777], [1305.0, 2.5882352941176476], [1301.0, 2.888888888888889], [1289.0, 2.8571428571428568], [1293.0, 2.7999999999999994], [1313.0, 2.6], [1341.0, 2.904761904761905], [1337.0, 3.2], [1333.0, 3.093023255813954], [1329.0, 3.0], [1317.0, 2.6666666666666665], [1321.0, 2.923076923076923], [1325.0, 2.6666666666666665], [1297.0, 2.4999999999999996], [1349.0, 2.692307692307692], [1345.0, 2.909090909090909], [1373.0, 2.75], [1369.0, 3.1176470588235294], [1365.0, 3.0], [1353.0, 2.5714285714285716], [1357.0, 3.071428571428571], [1377.0, 2.6], [1405.0, 2.6470588235294117], [1401.0, 2.8947368421052633], [1397.0, 2.6153846153846154], [1393.0, 2.6666666666666665], [1381.0, 2.5714285714285716], [1385.0, 3.1333333333333337], [1389.0, 2.8181818181818175], [1361.0, 2.6363636363636362], [1413.0, 2.533333333333333], [1409.0, 2.166666666666667], [1437.0, 2.5238095238095237], [1433.0, 2.500000000000001], [1429.0, 2.5624999999999996], [1417.0, 2.6842105263157894], [1421.0, 2.7499999999999996], [1441.0, 2.6], [1469.0, 2.4615384615384617], [1465.0, 2.5882352941176476], [1461.0, 2.833333333333334], [1457.0, 2.5999999999999996], [1445.0, 2.5], [1449.0, 2.7222222222222223], [1453.0, 2.8125], [1425.0, 2.6315789473684217], [1477.0, 2.75], [1473.0, 2.692307692307692], [1501.0, 2.6], [1497.0, 2.7], [1493.0, 2.8421052631578947], [1481.0, 4.32], [1485.0, 2.666666666666666], [1505.0, 2.7777777777777777], [1533.0, 2.625], [1529.0, 2.888888888888889], [1525.0, 2.2], [1521.0, 2.75], [1509.0, 2.428571428571429], [1513.0, 2.333333333333333], [1517.0, 2.6666666666666665], [1489.0, 2.526315789473684], [1541.0, 2.6666666666666665], [1537.0, 2.7777777777777772], [1545.0, 2.3333333333333335], [1549.0, 2.7777777777777772], [1553.0, 2.727272727272727], [1557.0, 2.833333333333333], [1561.0, 2.666666666666667], [1565.0, 2.75], [1569.0, 3.0], [1593.0, 2.8], [1597.0, 2.8], [1585.0, 2.3636363636363638], [1589.0, 2.714285714285714], [1573.0, 2.6666666666666665], [1577.0, 2.833333333333333], [1581.0, 2.625], [1605.0, 2.25], [1601.0, 2.8], [1609.0, 2.5], [1613.0, 3.0], [1621.0, 2.5], [1617.0, 2.5], [1625.0, 3.3333333333333335], [1629.0, 2.6], [1633.0, 2.2222222222222223], [1657.0, 2.6666666666666665], [1661.0, 2.0], [1649.0, 2.5], [1653.0, 2.3333333333333335], [1637.0, 2.857142857142857], [1641.0, 2.833333333333333], [1645.0, 2.75], [1669.0, 3.0], [1665.0, 2.166666666666667], [1673.0, 2.8888888888888884], [1677.0, 2.2], [1681.0, 2.166666666666667], [1685.0, 2.5714285714285716], [1689.0, 2.4], [1693.0, 3.0], [1697.0, 2.6666666666666665], [1721.0, 3.0], [1725.0, 2.2], [1713.0, 2.6], [1717.0, 2.714285714285714], [1701.0, 2.8], [1705.0, 2.666666666666667], [1709.0, 2.6], [1733.0, 3.2], [1729.0, 3.142857142857143], [1737.0, 2.875], [1741.0, 2.8], [1745.0, 2.833333333333333], [1749.0, 3.0], [1753.0, 2.818181818181818], [1757.0, 3.0], [1761.0, 2.857142857142857], [1785.0, 2.666666666666667], [1789.0, 3.142857142857143], [1777.0, 3.0], [1781.0, 2.5], [1765.0, 2.7777777777777772], [1769.0, 2.7777777777777772], [1773.0, 2.8], [1797.0, 3.2857142857142856], [1793.0, 3.125], [1801.0, 2.833333333333333], [1805.0, 2.1666666666666665], [1809.0, 2.6], [1813.0, 2.8], [1817.0, 2.285714285714286], [1821.0, 2.4444444444444446], [1825.0, 2.6], [1849.0, 2.888888888888889], [1853.0, 2.6666666666666665], [1841.0, 23.5], [1845.0, 2.142857142857143], [1829.0, 2.75], [1833.0, 2.666666666666667], [1837.0, 2.8749999999999996], [1861.0, 3.0], [1857.0, 2.8999999999999995], [1865.0, 3.272727272727273], [1869.0, 2.7777777777777772], [1873.0, 3.333333333333334], [1877.0, 3.5555555555555554], [1881.0, 3.2857142857142856], [1885.0, 2.6666666666666665], [1889.0, 3.083333333333333], [1913.0, 3.0], [1917.0, 2.8749999999999996], [1905.0, 3.375], [1909.0, 3.25], [1893.0, 2.833333333333333], [1897.0, 2.909090909090909], [1901.0, 2.8749999999999996], [1925.0, 2.8571428571428568], [1921.0, 3.1250000000000004], [1929.0, 3.2], [1933.0, 2.5], [1937.0, 3.2857142857142856], [1941.0, 3.1], [1945.0, 2.857142857142857], [1949.0, 3.0], [1953.0, 2.9999999999999996], [1977.0, 3.076923076923077], [1981.0, 3.076923076923077], [1969.0, 3.2], [1973.0, 3.0714285714285716], [1957.0, 3.4444444444444446], [1961.0, 2.666666666666667], [1965.0, 2.916666666666667], [1985.0, 2.8823529411764706], [1989.0, 3.2222222222222223], [1993.0, 3.1], [1997.0, 3.0000000000000004], [515.0, 1.7575757575757573], [527.0, 1.8857142857142857], [525.0, 1.8749999999999998], [523.0, 1.8513513513513509], [513.0, 1.5454545454545454], [517.0, 1.6666666666666663], [519.0, 1.7878787878787876], [543.0, 1.7499999999999998], [541.0, 1.8409090909090904], [539.0, 1.7407407407407405], [537.0, 1.714285714285714], [529.0, 1.8958333333333333], [531.0, 1.8437499999999996], [533.0, 1.8749999999999993], [535.0, 1.9285714285714284], [521.0, 1.7999999999999998], [547.0, 1.676470588235294], [559.0, 1.6551724137931032], [557.0, 1.8499999999999996], [555.0, 1.7894736842105259], [545.0, 1.9733333333333334], [549.0, 1.7058823529411764], [551.0, 1.8064516129032255], [575.0, 1.8275862068965514], [573.0, 1.7659574468085104], [571.0, 1.7826086956521734], [569.0, 1.8405797101449275], [561.0, 1.696969696969697], [563.0, 1.8499999999999999], [565.0, 1.875], [567.0, 1.9423076923076914], [553.0, 1.7777777777777775], [579.0, 1.9687499999999998], [591.0, 1.9523809523809523], [589.0, 1.9473684210526314], [587.0, 1.9545454545454546], [577.0, 1.9142857142857141], [581.0, 1.8767123287671237], [583.0, 1.7878787878787876], [607.0, 1.7241379310344829], [605.0, 1.8999999999999997], [603.0, 1.9999999999999998], [601.0, 1.9062499999999998], [593.0, 1.9199999999999997], [595.0, 1.9183673469387756], [597.0, 1.9285714285714286], [599.0, 1.9607843137254901], [585.0, 1.8076923076923073], [611.0, 1.8111111111111113], [623.0, 1.6451612903225807], [621.0, 1.891891891891892], [619.0, 1.911111111111111], [609.0, 1.8813559322033901], [613.0, 1.8666666666666665], [615.0, 1.8292682926829267], [639.0, 1.8108108108108105], [637.0, 1.5263157894736843], [635.0, 1.4999999999999996], [633.0, 1.883720930232558], [625.0, 1.9074074074074074], [627.0, 1.8611111111111107], [629.0, 1.9393939393939397], [631.0, 1.898550724637681], [617.0, 1.7741935483870968], [643.0, 1.9230769230769234], [655.0, 1.9259259259259258], [653.0, 1.8775510204081631], [651.0, 1.864864864864865], [641.0, 1.891891891891892], [645.0, 1.6981132075471697], [647.0, 1.7307692307692302], [671.0, 1.9512195121951215], [669.0, 1.9180327868852463], [667.0, 1.9066666666666667], [665.0, 1.886792452830189], [657.0, 1.8048780487804876], [659.0, 1.6785714285714284], [661.0, 1.943661971830986], [663.0, 2.0294117647058822], [649.0, 1.811594202898551], [675.0, 2.032258064516129], [687.0, 1.9500000000000002], [685.0, 1.9811320754716981], [683.0, 1.8684210526315785], [673.0, 1.878787878787879], [677.0, 1.605263157894737], [679.0, 1.9444444444444442], [703.0, 1.7692307692307694], [701.0, 1.8], [699.0, 2.025], [697.0, 1.7199999999999998], [689.0, 2.178571428571429], [691.0, 1.9199999999999997], [693.0, 1.782258064516129], [695.0, 1.880952380952381], [681.0, 1.7419354838709673], [707.0, 2.1000000000000005], [719.0, 1.875], [717.0, 1.8749999999999998], [715.0, 1.9], [705.0, 1.9090909090909087], [709.0, 1.7499999999999998], [711.0, 1.9166666666666665], [735.0, 1.8333333333333335], [733.0, 1.7142857142857144], [731.0, 1.8499999999999996], [729.0, 1.7777777777777777], [721.0, 2.090909090909091], [723.0, 1.8571428571428572], [725.0, 2.1428571428571432], [727.0, 1.9230769230769231], [713.0, 1.7], [739.0, 1.9166666666666665], [751.0, 2.0], [749.0, 2.0], [747.0, 2.076923076923077], [737.0, 1.9444444444444442], [741.0, 1.7777777777777777], [743.0, 1.9166666666666665], [767.0, 2.0], [765.0, 2.0], [763.0, 1.6666666666666667], [761.0, 1.7999999999999998], [753.0, 2.0], [755.0, 2.066666666666667], [757.0, 2.0], [759.0, 1.9], [745.0, 2.0], [771.0, 2.2142857142857144], [783.0, 2.0], [781.0, 2.0], [779.0, 2.0576923076923075], [769.0, 1.952380952380952], [773.0, 1.9166666666666665], [775.0, 2.0547945205479445], [799.0, 1.846153846153846], [797.0, 2.166666666666667], [795.0, 2.1666666666666674], [793.0, 2.0], [785.0, 2.0], [787.0, 2.071428571428571], [789.0, 2.0], [791.0, 2.0], [777.0, 2.0909090909090913], [803.0, 2.0], [815.0, 1.8888888888888888], [813.0, 1.9999999999999998], [811.0, 1.923076923076923], [801.0, 2.1666666666666665], [805.0, 2.0], [807.0, 2.0], [831.0, 1.9444444444444442], [829.0, 2.0], [827.0, 2.0909090909090913], [825.0, 2.0], [817.0, 2.0], [819.0, 1.8235294117647056], [821.0, 1.9], [823.0, 1.9374999999999998], [809.0, 1.9473684210526314], [835.0, 2.111111111111111], [833.0, 2.0], [847.0, 2.1250000000000004], [845.0, 2.0], [843.0, 1.9], [837.0, 2.1739130434782616], [839.0, 2.272727272727273], [857.0, 2.0], [859.0, 2.0], [861.0, 1.9], [863.0, 2.052631578947368], [849.0, 1.7777777777777777], [851.0, 2.0], [853.0, 2.0], [855.0, 1.909090909090909], [841.0, 1.95], [867.0, 2.4999999999999996], [879.0, 2.1875], [877.0, 2.1333333333333337], [875.0, 2.1111111111111116], [865.0, 2.142857142857143], [869.0, 2.0], [871.0, 1.923076923076923], [895.0, 1.9999999999999998], [893.0, 2.0], [891.0, 2.2142857142857144], [889.0, 2.066666666666667], [881.0, 2.2222222222222228], [883.0, 2.2222222222222223], [885.0, 2.363636363636364], [887.0, 2.2222222222222223], [873.0, 2.3571428571428577], [899.0, 2.2000000000000006], [911.0, 2.0], [909.0, 1.8888888888888888], [907.0, 2.111111111111111], [897.0, 2.0], [901.0, 1.8666666666666665], [903.0, 2.0000000000000004], [927.0, 2.153846153846154], [925.0, 2.0], [923.0, 2.2], [921.0, 2.1428571428571437], [913.0, 1.7777777777777777], [915.0, 2.1428571428571432], [917.0, 2.2307692307692304], [919.0, 2.466666666666667], [905.0, 2.727272727272727], [931.0, 2.1], [943.0, 2.1428571428571432], [941.0, 1.909090909090909], [939.0, 2.2727272727272734], [929.0, 2.6428571428571423], [933.0, 2.5000000000000004], [935.0, 2.0769230769230766], [959.0, 2.214285714285715], [957.0, 2.0000000000000004], [955.0, 2.2222222222222223], [953.0, 2.0000000000000004], [945.0, 2.071428571428571], [947.0, 2.2222222222222223], [949.0, 2.272727272727273], [951.0, 2.5000000000000004], [937.0, 2.266666666666667], [963.0, 2.0], [975.0, 2.076923076923077], [973.0, 2.25], [971.0, 2.125], [961.0, 2.0], [965.0, 2.083333333333333], [967.0, 2.307692307692308], [991.0, 2.2857142857142856], [989.0, 2.1578947368421053], [987.0, 2.1], [985.0, 2.153846153846154], [977.0, 2.0], [979.0, 2.3000000000000003], [981.0, 2.2142857142857144], [983.0, 2.285714285714286], [969.0, 2.1428571428571432], [995.0, 2.3000000000000003], [1007.0, 2.5], [1005.0, 1.8888888888888888], [1003.0, 2.3333333333333335], [993.0, 2.454545454545455], [997.0, 2.416666666666667], [999.0, 2.2], [1023.0, 2.0], [1021.0, 2.730769230769231], [1019.0, 2.133333333333334], [1017.0, 2.25], [1009.0, 2.347826086956522], [1011.0, 2.166666666666667], [1013.0, 2.1538461538461546], [1015.0, 2.0], [1001.0, 1.875], [1030.0, 2.3000000000000003], [1054.0, 2.3000000000000003], [1050.0, 2.272727272727273], [1046.0, 2.0], [1026.0, 2.2857142857142856], [1034.0, 2.0], [1038.0, 2.2727272727272734], [1086.0, 2.2500000000000004], [1082.0, 2.6999999999999997], [1078.0, 2.153846153846154], [1074.0, 2.6666666666666665], [1058.0, 2.5555555555555554], [1062.0, 2.2], [1066.0, 2.1111111111111116], [1070.0, 2.6666666666666665], [1042.0, 2.0], [1094.0, 2.1428571428571432], [1118.0, 2.416666666666667], [1114.0, 2.3333333333333335], [1110.0, 2.4285714285714284], [1090.0, 2.454545454545455], [1098.0, 2.3000000000000003], [1102.0, 2.4545454545454546], [1150.0, 2.5555555555555554], [1146.0, 2.8888888888888884], [1142.0, 2.6], [1138.0, 2.888888888888889], [1122.0, 2.692307692307692], [1126.0, 2.8749999999999996], [1130.0, 2.4999999999999996], [1134.0, 2.7499999999999996], [1106.0, 2.6428571428571423], [1158.0, 2.5625], [1182.0, 2.4166666666666665], [1178.0, 2.666666666666667], [1174.0, 2.6666666666666665], [1154.0, 2.749999999999999], [1162.0, 2.8571428571428568], [1166.0, 2.5], [1214.0, 2.636363636363636], [1210.0, 2.6296296296296298], [1206.0, 2.875], [1202.0, 2.7222222222222223], [1186.0, 2.3076923076923084], [1190.0, 2.3750000000000004], [1194.0, 2.928571428571429], [1198.0, 2.4285714285714284], [1170.0, 2.125], [1222.0, 2.454545454545454], [1218.0, 2.599999999999999], [1246.0, 2.416666666666667], [1242.0, 2.769230769230769], [1238.0, 2.666666666666666], [1226.0, 2.4999999999999996], [1230.0, 2.6666666666666665], [1266.0, 3.0], [1270.0, 2.5555555555555554], [1274.0, 2.833333333333333], [1278.0, 2.625], [1250.0, 2.5555555555555554], [1254.0, 2.6666666666666665], [1258.0, 2.153846153846154], [1262.0, 2.6], [1234.0, 2.1428571428571432], [1286.0, 2.4615384615384612], [1310.0, 2.7222222222222228], [1306.0, 2.5], [1302.0, 2.545454545454545], [1282.0, 2.6999999999999997], [1290.0, 2.666666666666667], [1294.0, 2.8823529411764706], [1342.0, 2.9375000000000004], [1338.0, 2.5454545454545454], [1334.0, 2.6666666666666665], [1330.0, 2.7777777777777772], [1314.0, 2.9230769230769225], [1318.0, 2.5999999999999996], [1322.0, 2.4444444444444446], [1326.0, 2.708333333333333], [1298.0, 2.5], [1350.0, 3.1875], [1358.0, 2.1999999999999997], [1370.0, 2.8], [1374.0, 2.2222222222222223], [1366.0, 2.5999999999999996], [1346.0, 2.7999999999999994], [1354.0, 2.7058823529411766], [1406.0, 2.555555555555555], [1402.0, 2.5294117647058827], [1398.0, 2.8000000000000003], [1394.0, 2.666666666666666], [1378.0, 2.3636363636363638], [1382.0, 2.6666666666666665], [1386.0, 2.3333333333333335], [1390.0, 2.5], [1362.0, 3.0588235294117645], [1414.0, 2.705882352941177], [1438.0, 2.5384615384615388], [1434.0, 2.714285714285714], [1430.0, 2.473684210526316], [1410.0, 2.384615384615385], [1418.0, 2.6315789473684204], [1422.0, 2.7222222222222223], [1470.0, 2.380952380952381], [1466.0, 2.529411764705882], [1462.0, 2.7142857142857144], [1458.0, 2.888888888888889], [1442.0, 2.8823529411764715], [1446.0, 2.4666666666666672], [1450.0, 2.6666666666666665], [1454.0, 2.5], [1426.0, 2.6666666666666665], [1478.0, 2.45], [1502.0, 2.5], [1498.0, 2.8], [1494.0, 2.625], [1474.0, 2.6111111111111107], [1482.0, 6.714285714285714], [1486.0, 2.5238095238095233], [1534.0, 2.666666666666667], [1530.0, 2.6666666666666665], [1526.0, 3.0000000000000004], [1522.0, 2.7499999999999996], [1506.0, 2.5454545454545454], [1510.0, 2.75], [1514.0, 3.4], [1518.0, 2.666666666666667], [1490.0, 2.5789473684210527], [1542.0, 3.0], [1538.0, 2.4285714285714284], [1546.0, 2.5], [1550.0, 2.5], [1554.0, 2.428571428571429], [1558.0, 2.4], [1562.0, 2.8], [1566.0, 2.5714285714285716], [1570.0, 2.8571428571428568], [1594.0, 2.4], [1598.0, 2.5555555555555554], [1586.0, 3.0], [1590.0, 2.75], [1574.0, 2.785714285714286], [1578.0, 2.3333333333333335], [1582.0, 3.142857142857143], [1606.0, 3.375], [1602.0, 2.7499999999999996], [1610.0, 3.0], [1614.0, 2.8999999999999995], [1622.0, 2.8], [1618.0, 2.3333333333333335], [1626.0, 2.625], [1630.0, 2.8571428571428568], [1634.0, 2.4], [1658.0, 3.166666666666667], [1662.0, 2.9000000000000004], [1650.0, 2.6], [1654.0, 3.4000000000000004], [1638.0, 2.75], [1642.0, 2.666666666666667], [1646.0, 2.666666666666667], [1670.0, 2.666666666666667], [1666.0, 2.4], [1674.0, 3.0], [1678.0, 2.4000000000000004], [1682.0, 2.6666666666666665], [1686.0, 2.5], [1690.0, 2.7777777777777772], [1694.0, 3.9999999999999996], [1698.0, 2.5], [1722.0, 3.0], [1726.0, 2.5], [1714.0, 2.4], [1718.0, 2.5], [1702.0, 2.75], [1706.0, 2.3333333333333335], [1710.0, 3.142857142857143], [1734.0, 2.9999999999999996], [1730.0, 3.375], [1738.0, 2.6], [1742.0, 3.0], [1746.0, 3.0], [1750.0, 3.0], [1754.0, 2.428571428571429], [1758.0, 2.833333333333333], [1762.0, 2.6], [1786.0, 3.0], [1790.0, 2.7999999999999994], [1778.0, 3.2222222222222223], [1782.0, 2.75], [1766.0, 2.5], [1770.0, 2.4], [1774.0, 3.2], [1798.0, 2.6666666666666665], [1794.0, 2.8571428571428568], [1802.0, 2.5], [1806.0, 2.25], [1810.0, 3.0], [1814.0, 2.888888888888889], [1818.0, 2.2], [1822.0, 2.0], [1826.0, 2.625], [1854.0, 3.1111111111111116], [1846.0, 2.3333333333333335], [1842.0, 3.5], [1850.0, 3.0], [1830.0, 2.5], [1834.0, 2.5555555555555554], [1838.0, 2.2], [1862.0, 2.666666666666666], [1858.0, 2.5], [1866.0, 2.9756097560975614], [1870.0, 3.1250000000000004], [1874.0, 2.625], [1878.0, 2.5714285714285716], [1882.0, 2.666666666666667], [1886.0, 2.5], [1890.0, 3.2], [1914.0, 3.6666666666666665], [1918.0, 3.25], [1906.0, 3.5], [1910.0, 3.1666666666666665], [1894.0, 3.583333333333333], [1898.0, 2.8181818181818175], [1902.0, 3.545454545454545], [1926.0, 2.8888888888888884], [1922.0, 3.6999999999999997], [1930.0, 3.25], [1934.0, 3.2307692307692313], [1938.0, 3.2666666666666666], [1942.0, 2.9999999999999996], [1946.0, 2.833333333333333], [1950.0, 3.2857142857142856], [1954.0, 3.3999999999999995], [1978.0, 3.0], [1982.0, 3.0625], [1970.0, 3.4129443938012773], [1974.0, 3.285714285714286], [1958.0, 2.833333333333333], [1962.0, 4.090909090909091], [1966.0, 3.714285714285714], [1986.0, 3.0909090909090913], [1990.0, 3.6250000000000004], [1994.0, 3.125], [1998.0, 2.888888888888889], [1031.0, 1.875], [1055.0, 2.2000000000000006], [1051.0, 2.230769230769231], [1047.0, 2.181818181818182], [1027.0, 1.909090909090909], [1035.0, 2.166666666666667], [1039.0, 2.5999999999999996], [1087.0, 2.5999999999999996], [1083.0, 2.4444444444444446], [1079.0, 2.5], [1075.0, 2.0], [1059.0, 2.714285714285714], [1063.0, 2.25], [1067.0, 2.4285714285714284], [1071.0, 2.1250000000000004], [1043.0, 2.3000000000000003], [1095.0, 2.333333333333334], [1091.0, 2.625], [1119.0, 2.0], [1115.0, 2.5], [1111.0, 2.0], [1099.0, 2.818181818181818], [1103.0, 2.4000000000000004], [1139.0, 2.545454545454545], [1143.0, 2.466666666666667], [1147.0, 2.4], [1151.0, 2.7692307692307687], [1123.0, 2.666666666666666], [1127.0, 2.625], [1131.0, 2.25], [1135.0, 2.2], [1107.0, 2.3076923076923075], [1159.0, 2.8], [1183.0, 2.5], [1179.0, 2.3750000000000004], [1175.0, 2.5], [1155.0, 2.5], [1163.0, 2.4444444444444446], [1167.0, 2.583333333333333], [1215.0, 2.466666666666667], [1211.0, 2.5454545454545454], [1207.0, 2.625], [1203.0, 2.166666666666667], [1187.0, 2.545454545454545], [1191.0, 2.6666666666666665], [1195.0, 2.5], [1199.0, 2.9], [1171.0, 2.214285714285715], [1223.0, 2.6249999999999996], [1247.0, 2.5000000000000004], [1243.0, 2.5], [1239.0, 2.5], [1219.0, 2.6666666666666665], [1227.0, 2.5714285714285716], [1231.0, 2.307692307692308], [1279.0, 2.909090909090909], [1275.0, 2.75], [1271.0, 2.3333333333333335], [1267.0, 2.6999999999999997], [1251.0, 2.6666666666666665], [1255.0, 2.583333333333333], [1259.0, 2.4285714285714284], [1263.0, 2.4444444444444446], [1235.0, 2.8571428571428568], [1287.0, 2.4444444444444446], [1311.0, 2.538461538461538], [1307.0, 2.6111111111111116], [1303.0, 2.7058823529411766], [1283.0, 2.4615384615384617], [1291.0, 2.1875], [1295.0, 2.4000000000000004], [1343.0, 2.5384615384615383], [1339.0, 2.6451612903225805], [1335.0, 2.68], [1331.0, 2.8913043478260865], [1315.0, 2.375], [1319.0, 2.4210526315789473], [1323.0, 2.9166666666666665], [1327.0, 2.545454545454546], [1299.0, 2.909090909090909], [1351.0, 2.6874999999999996], [1375.0, 2.6875], [1371.0, 3.5], [1367.0, 3.071428571428571], [1347.0, 2.873831775700934], [1355.0, 2.9285714285714284], [1359.0, 2.6999999999999997], [1407.0, 2.625], [1403.0, 2.6315789473684212], [1399.0, 2.642857142857143], [1395.0, 2.7777777777777777], [1379.0, 2.5], [1383.0, 2.8], [1387.0, 2.692307692307692], [1391.0, 2.727272727272727], [1363.0, 2.333333333333333], [1415.0, 2.6875], [1439.0, 2.9130434782608696], [1435.0, 2.4705882352941178], [1431.0, 2.5], [1411.0, 2.5000000000000004], [1419.0, 2.5625], [1423.0, 2.5000000000000004], [1471.0, 2.692307692307692], [1467.0, 2.349999999999999], [1463.0, 2.4375], [1459.0, 2.727272727272727], [1443.0, 2.6666666666666665], [1447.0, 3.2083333333333335], [1451.0, 2.6818181818181825], [1455.0, 2.909090909090909], [1427.0, 2.4285714285714284], [1479.0, 3.0], [1503.0, 2.8999999999999995], [1499.0, 2.555555555555556], [1495.0, 2.55], [1475.0, 2.4736842105263155], [1483.0, 2.6499999999999995], [1487.0, 2.7857142857142856], [1535.0, 3.0], [1531.0, 3.0714285714285716], [1527.0, 2.8749999999999996], [1523.0, 3.0], [1507.0, 2.5], [1511.0, 2.8], [1515.0, 2.6666666666666665], [1519.0, 2.75], [1491.0, 2.75], [1543.0, 2.8333333333333326], [1539.0, 2.5], [1547.0, 2.8], [1551.0, 2.7142857142857144], [1555.0, 2.8], [1559.0, 2.75], [1563.0, 2.75], [1567.0, 2.75], [1571.0, 2.8], [1595.0, 3.0], [1599.0, 2.3333333333333335], [1587.0, 2.6], [1591.0, 2.5555555555555554], [1575.0, 3.0], [1579.0, 2.7777777777777777], [1583.0, 3.0], [1607.0, 2.25], [1603.0, 2.2], [1611.0, 2.5714285714285716], [1615.0, 2.75], [1619.0, 2.5999999999999996], [1623.0, 3.0], [1627.0, 2.75], [1631.0, 2.5], [1635.0, 2.6666666666666665], [1659.0, 2.6], [1663.0, 2.3333333333333335], [1651.0, 2.625], [1655.0, 2.625], [1639.0, 2.666666666666667], [1643.0, 2.5], [1647.0, 2.833333333333333], [1671.0, 2.6666666666666665], [1667.0, 2.833333333333333], [1675.0, 2.3333333333333335], [1679.0, 2.2], [1683.0, 2.857142857142857], [1687.0, 2.888888888888889], [1691.0, 3.0], [1695.0, 2.8181818181818175], [1699.0, 2.749999999999999], [1723.0, 2.6999999999999997], [1727.0, 3.0], [1715.0, 2.8], [1719.0, 2.0], [1703.0, 2.7777777777777772], [1707.0, 3.0], [1711.0, 2.625], [1735.0, 2.75], [1731.0, 3.2857142857142856], [1739.0, 2.5], [1743.0, 2.5714285714285716], [1747.0, 2.75], [1751.0, 3.1428571428571432], [1755.0, 2.3333333333333335], [1759.0, 2.8], [1763.0, 2.833333333333333], [1787.0, 3.625], [1791.0, 2.75], [1779.0, 2.7142857142857144], [1783.0, 2.166666666666667], [1767.0, 2.7777777777777772], [1771.0, 2.25], [1775.0, 2.666666666666667], [1799.0, 3.0], [1795.0, 2.7142857142857144], [1803.0, 2.666666666666667], [1807.0, 2.9], [1811.0, 2.2222222222222228], [1815.0, 2.75], [1819.0, 2.6666666666666665], [1823.0, 2.7142857142857144], [1827.0, 3.0], [1855.0, 2.666666666666667], [1847.0, 2.285714285714286], [1843.0, 3.0], [1851.0, 3.1], [1831.0, 2.5], [1835.0, 2.8], [1839.0, 2.0], [1863.0, 3.111111111111111], [1859.0, 3.5555555555555554], [1867.0, 2.6], [1871.0, 3.0], [1875.0, 3.384615384615384], [1879.0, 3.2666666666666666], [1883.0, 2.7777777777777777], [1887.0, 3.375], [1891.0, 2.75], [1915.0, 3.2727272727272725], [1919.0, 2.9999999999999996], [1907.0, 3.375], [1911.0, 3.2], [1895.0, 3.0], [1899.0, 3.5], [1903.0, 3.0], [1927.0, 2.833333333333333], [1923.0, 3.5714285714285716], [1931.0, 3.4545454545454546], [1935.0, 2.6666666666666665], [1939.0, 3.166666666666667], [1943.0, 3.0], [1947.0, 3.5384615384615388], [1951.0, 3.1], [1955.0, 3.5], [1979.0, 3.307692307692308], [1983.0, 2.8666666666666667], [1971.0, 3.307692307692308], [1975.0, 3.4666666666666672], [1959.0, 3.6842105263157894], [1963.0, 3.0], [1967.0, 2.8571428571428568], [1987.0, 3.3529411764705883], [1991.0, 2.8888888888888884], [1995.0, 3.357142857142857], [1999.0, 3.2077922077922083], [1.0, 0.9047619047619045]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[901.6366215040914, 2.1256044929574114]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4280.4, "minX": 1.62936324E12, "maxY": 137527.73333333334, "series": [{"data": [[1.62936348E12, 67595.46666666666], [1.62936366E12, 30636.0], [1.6293633E12, 136871.46666666667], [1.6293636E12, 128836.8], [1.62936324E12, 13579.2], [1.62936342E12, 128849.06666666667], [1.62936336E12, 110731.2], [1.62936354E12, 137527.73333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62936348E12, 21307.266666666666], [1.62936366E12, 9657.0], [1.6293633E12, 43144.26666666667], [1.6293636E12, 40611.6], [1.62936324E12, 4280.4], [1.62936342E12, 40615.46666666667], [1.62936336E12, 34904.4], [1.62936354E12, 43351.13333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62936366E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1.4068596316123791, "minX": 1.62936324E12, "maxY": 3.3431876606683804, "series": [{"data": [[1.62936348E12, 1.4068596316123791], [1.62936366E12, 1.9335335335335413], [1.6293633E12, 1.6497132102527314], [1.6293636E12, 3.3431876606683804], [1.62936324E12, 1.760614272809394], [1.62936342E12, 1.9148895658796705], [1.62936336E12, 1.480004431150999], [1.62936354E12, 2.607902600008918]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62936366E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1.0617003901642321, "minX": 1.62936324E12, "maxY": 1.6877558792725889, "series": [{"data": [[1.62936348E12, 1.0617003901642321], [1.62936366E12, 1.2388388388388416], [1.6293633E12, 1.160691880265271], [1.6293636E12, 1.6877558792725889], [1.62936324E12, 1.608401084010842], [1.62936342E12, 1.1721249047981679], [1.62936336E12, 1.093885011631778], [1.62936354E12, 1.3945056415287862]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62936366E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.1297124904798174, "minX": 1.62936324E12, "maxY": 0.4828364950316177, "series": [{"data": [[1.62936348E12, 0.16468560021776554], [1.62936366E12, 0.14314314314314347], [1.6293633E12, 0.21101451873095434], [1.6293636E12, 0.1814719603922683], [1.62936324E12, 0.4828364950316177], [1.62936342E12, 0.1297124904798174], [1.62936336E12, 0.15420405450315727], [1.62936354E12, 0.1623779155331589]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62936366E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.62936324E12, "maxY": 67.0, "series": [{"data": [[1.62936348E12, 10.0], [1.62936366E12, 8.0], [1.6293633E12, 67.0], [1.6293636E12, 46.0], [1.62936324E12, 53.0], [1.62936342E12, 16.0], [1.62936336E12, 16.0], [1.62936354E12, 36.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62936348E12, 2.0], [1.62936366E12, 3.0], [1.6293633E12, 2.0], [1.6293636E12, 4.0], [1.62936324E12, 2.0], [1.62936342E12, 2.0], [1.62936336E12, 2.0], [1.62936354E12, 3.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62936348E12, 2.0], [1.62936366E12, 4.0], [1.6293633E12, 3.0], [1.6293636E12, 5.0], [1.62936324E12, 6.0], [1.62936342E12, 3.0], [1.62936336E12, 2.0], [1.62936354E12, 5.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62936348E12, 2.0], [1.62936366E12, 3.0], [1.6293633E12, 3.0], [1.6293636E12, 4.0], [1.62936324E12, 3.0], [1.62936342E12, 2.0], [1.62936336E12, 2.0], [1.62936354E12, 4.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.62936348E12, 0.0], [1.62936366E12, 0.0], [1.6293633E12, 0.0], [1.6293636E12, 1.0], [1.62936324E12, 0.0], [1.62936342E12, 1.0], [1.62936336E12, 0.0], [1.62936354E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62936348E12, 1.0], [1.62936366E12, 2.0], [1.6293633E12, 2.0], [1.6293636E12, 3.0], [1.62936324E12, 1.0], [1.62936342E12, 2.0], [1.62936336E12, 1.0], [1.62936354E12, 3.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62936366E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 67.0, "maxY": 3.0, "series": [{"data": [[561.0, 2.0], [586.0, 2.0], [596.0, 2.0], [589.0, 2.0], [67.0, 1.0], [100.0, 1.0], [273.0, 1.0], [316.0, 2.0], [313.0, 1.0], [315.0, 1.0], [351.0, 2.0], [349.0, 2.0], [342.0, 2.0], [341.0, 2.0], [350.0, 2.0], [347.0, 2.0], [343.0, 2.0], [348.0, 2.0], [346.0, 2.0], [345.0, 2.0], [344.0, 2.0], [353.0, 2.0], [355.0, 2.0], [352.0, 3.0], [354.0, 2.0], [357.0, 2.0], [356.0, 2.0], [358.0, 2.0], [359.0, 2.0], [364.0, 1.0], [365.0, 2.0], [360.0, 2.0], [375.0, 1.0], [373.0, 2.0], [380.0, 2.0], [372.0, 1.0], [379.0, 2.0], [374.0, 2.0], [378.0, 2.0], [371.0, 2.0], [370.0, 2.0], [369.0, 1.0], [368.0, 1.0], [382.0, 1.0], [383.0, 3.0], [381.0, 2.0], [376.0, 2.0], [377.0, 2.0], [388.0, 1.0], [385.0, 1.0], [417.0, 2.0], [421.0, 3.0], [424.0, 3.0], [444.0, 1.0], [446.0, 3.0], [453.0, 1.0], [448.0, 2.0], [451.0, 2.0], [450.0, 2.0], [452.0, 3.0], [455.0, 3.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 596.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 67.0, "maxY": 2.0, "series": [{"data": [[561.0, 1.0], [586.0, 1.0], [596.0, 1.0], [589.0, 1.0], [67.0, 1.0], [100.0, 1.0], [273.0, 1.0], [316.0, 2.0], [313.0, 1.0], [315.0, 1.0], [351.0, 1.0], [349.0, 1.0], [342.0, 1.0], [341.0, 1.0], [350.0, 1.0], [347.0, 1.0], [343.0, 1.0], [348.0, 1.0], [346.0, 1.0], [345.0, 1.0], [344.0, 1.0], [353.0, 1.0], [355.0, 1.0], [352.0, 1.0], [354.0, 1.0], [357.0, 1.0], [356.0, 1.0], [358.0, 1.0], [359.0, 1.0], [364.0, 1.0], [365.0, 1.0], [360.0, 1.0], [375.0, 1.0], [373.0, 1.0], [380.0, 1.0], [372.0, 1.0], [379.0, 1.0], [374.0, 1.0], [378.0, 1.0], [371.0, 1.0], [370.0, 1.0], [369.0, 1.0], [368.0, 1.0], [382.0, 1.0], [383.0, 1.0], [381.0, 1.0], [376.0, 1.0], [377.0, 1.0], [388.0, 1.0], [385.0, 1.0], [417.0, 1.0], [421.0, 1.0], [424.0, 1.0], [444.0, 1.0], [446.0, 2.0], [453.0, 1.0], [448.0, 1.0], [451.0, 1.0], [450.0, 1.0], [452.0, 1.0], [455.0, 2.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 596.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 36.9, "minX": 1.62936324E12, "maxY": 373.7, "series": [{"data": [[1.62936348E12, 183.68333333333334], [1.62936366E12, 83.25], [1.6293633E12, 371.93333333333334], [1.6293636E12, 350.0833333333333], [1.62936324E12, 36.9], [1.62936342E12, 350.1666666666667], [1.62936336E12, 300.9], [1.62936354E12, 373.7]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62936366E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 36.9, "minX": 1.62936324E12, "maxY": 373.71666666666664, "series": [{"data": [[1.62936348E12, 183.68333333333334], [1.62936366E12, 83.25], [1.6293633E12, 371.93333333333334], [1.6293636E12, 350.1], [1.62936324E12, 36.9], [1.62936342E12, 350.1333333333333], [1.62936336E12, 300.9], [1.62936354E12, 373.71666666666664]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62936366E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 36.9, "minX": 1.62936324E12, "maxY": 373.71666666666664, "series": [{"data": [[1.62936348E12, 183.68333333333334], [1.62936366E12, 83.25], [1.6293633E12, 371.93333333333334], [1.6293636E12, 350.1], [1.62936324E12, 36.9], [1.62936342E12, 350.1333333333333], [1.62936336E12, 300.9], [1.62936354E12, 373.71666666666664]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62936366E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 36.9, "minX": 1.62936324E12, "maxY": 373.71666666666664, "series": [{"data": [[1.62936348E12, 183.68333333333334], [1.62936366E12, 83.25], [1.6293633E12, 371.93333333333334], [1.6293636E12, 350.1], [1.62936324E12, 36.9], [1.62936342E12, 350.1333333333333], [1.62936336E12, 300.9], [1.62936354E12, 373.71666666666664]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62936366E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

